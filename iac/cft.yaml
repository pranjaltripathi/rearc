Resources:
  # EC2 Instance
  AppInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0c02fb55956c7d316 # Amazon Linux 2 AMI
      KeyName: keypair # Replace with your actual key pair name
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      UserData:
        Fn::Base64: |
          #!/bin/bash
          sudo yum update -y
          sudo yum install -y docker
          sudo service docker start
          sudo docker run -d -p 80:80 -e SECRET_WORD=my_secret_word node:10

  # Security Group for EC2 Instance
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow traffic from the Load Balancer to EC2
      VpcId: vpc-0d27a315ea7414368 # Replace with your actual VPC ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup

  # Security Group for Load Balancer
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow inbound HTTP traffic for ELB
      VpcId: vpc-0d27a315ea7414368 # Replace with your actual VPC ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  # Elastic Load Balancer
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - subnet-04e28af895f1b8616 # Replace with your actual subnet IDs
        - subnet-079bf2d90ca101088 # Add at least two subnets for multi-AZ
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Scheme: internet-facing

  # Target Group for Load Balancer
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: vpc-0d27a315ea7414368 # Replace with your actual VPC ID
      Port: 80
      Protocol: HTTP
      TargetType: instance
      Targets:
        - Id: !Ref AppInstance

  # Listener for HTTP (without certificate)
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
